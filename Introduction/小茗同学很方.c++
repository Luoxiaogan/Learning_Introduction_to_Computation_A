/* n(n不超过1000)个有蛀牙的小朋友被老师组织集体去拔牙，但是排队的时候由于所有小朋友都害怕拔牙，所以没人主动排在前面。这时老师想了一个有趣的方法，所有小朋友排成一列，按照顺序进行编号（编号从1开始），并从1依次进行报数，数到m的小朋友去拔牙，然后后面的小朋友再从1开始报数，下一个数到m的小朋友去拔牙…依此循环往复。小茗同学既不想先去拔牙，也不想被留到最后再拔，于是他决定第k(k<=n)个去拔。请你帮小茗同学想想他应该排在第几个位置才能“如愿以偿”。

关于输入
n m k

关于输出
一个整数，小茗在队列中的位置(从1开始) */
#include<iostream>
using namespace std;
int main()
{
    int n,m,k;
    cin >> n >> m >> k;
    bool a[n+1]={};//默认初始化为false，即没有被叫去拔牙（a[1],...,a[n]）
    int b[n+1]={};//用于记录每个小朋友（从1到n）（对应b[1],...,b[n]）被叫到的顺序
    int i=1;//从第一个开始
    for(int w=1;w<=n;w++)
    {
        //进行n轮循环，找完n个小朋友
        int count=0;//记录数了多少次，一共m次
        int temp=-1;//(用于存放)
        while(count<=m)
        {
            if(a[i]==false)//没有拔牙
            {
                count++;
            }
            if(count==m)
            {
                temp=i;
                a[i]=!a[i];//第i为小朋友被叫去拔牙了
                i++;break;//结束本次循环
            }
            if(i==n)
            {
                i=1;//重新开始,就是说小朋友的剩余个数已经不足m个了,就从i=1开始啦
            }
            else{
                i++;
            }
        }
        //循环结束之后,第w个去拔牙小朋友的编号就是temp
        b[w]=temp;
    }
    cout << b[k];
}